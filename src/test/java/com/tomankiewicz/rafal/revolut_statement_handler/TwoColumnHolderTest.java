package com.tomankiewicz.rafal.revolut_statement_handler;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.Test;

class TwoColumnHolderTest {


	private static final TwoColumnHolder reversedOrder1 = new TwoColumnHolder("foo", "bar");
	private static final TwoColumnHolder reversedOrder2 = new TwoColumnHolder("bar", "foo");;
	
	private static final TwoColumnHolder upperCaseStrings = new TwoColumnHolder("A", "B");
	private static final TwoColumnHolder lowerCaseStrings = new TwoColumnHolder("a", "b");
	
	private static final TwoColumnHolder emptyStrings1 = new TwoColumnHolder("", "");
	private static final TwoColumnHolder emptyStrings2 = new TwoColumnHolder("", "");
	
	private static final TwoColumnHolder sameStrings1 = new TwoColumnHolder("foo", "bar");;
	private static final TwoColumnHolder sameStrings2 = new TwoColumnHolder("foo", "bar");;
	
	private static final TwoColumnHolder nullStrings1 = new TwoColumnHolder(null, null);
	private static final TwoColumnHolder nullStrings2 = new TwoColumnHolder(null, null);
	
	/*
	 * As the hashCode and equals methods were generated by IDE, their correctness should be verified
	 */

	@Test
	void hashCodeMethodReturnsDifferentHashCodesForDifferentObjects() {

		assertNotEquals(reversedOrder1.hashCode(), reversedOrder2.hashCode());
		assertNotEquals(upperCaseStrings.hashCode(), lowerCaseStrings.hashCode());
	}
	
	@Test
	void hashCodeMethodShouldReturnSameHashCodesForSameObjects() {
		
		assertEquals(emptyStrings1.hashCode(), emptyStrings2.hashCode());
		assertEquals(sameStrings1.hashCode(), sameStrings2.hashCode());
		assertEquals(nullStrings1.hashCode(), nullStrings2.hashCode());
	}
	
	@Test
	void equalsMethodShouldReturnFalseForDifferentObjects() {
		
		assertFalse(reversedOrder1.equals(reversedOrder2));
		assertFalse(upperCaseStrings.equals(lowerCaseStrings));
	}
	
	@Test
	void equalsMethodReturnsTrueForSameObjects() {
		
		assertTrue(emptyStrings1.equals(emptyStrings2));
		assertTrue(sameStrings1.equals(sameStrings2));
		assertTrue(nullStrings1.equals(nullStrings2));
		
	}

}
